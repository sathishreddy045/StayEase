{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s\\\\Hotel Booking Project\\\\frontend\\\\src\\\\component\\\\common\\\\RoomSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport ApiService from '../../service/ApiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomSearch = () => {\n  _s();\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => setError(''), timeout);\n  };\n  const handleSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return;\n    }\n    try {\n      const formattedStart = startDate.toISOString().split('T')[0];\n      const formattedEnd = endDate.toISOString().split('T')[0];\n      const response = await ApiService.getAvailableRoomsByDateAndType(formattedStart, formattedEnd, roomType);\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('No rooms available for selected dates and type.');\n          return;\n        }\n        navigate('/search-results', {\n          state: {\n            rooms: response.roomList,\n            filters: {\n              startDate: formattedStart,\n              endDate: formattedEnd,\n              roomType\n            }\n          }\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showError(\"Unknown error occurred: \" + (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Check-in Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => setStartDate(date),\n        dateFormat: \"dd/MM/yyyy\",\n        placeholderText: \"Select Check-in Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Check-out Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => setEndDate(date),\n        dateFormat: \"dd/MM/yyyy\",\n        placeholderText: \"Select Check-out Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Room Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: roomType,\n        onChange: e => setRoomType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          children: \"Select Room Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), roomTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"home-search-button\",\n      onClick: handleSearch,\n      children: \"Search Rooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomSearch, \"rElN2f3TAe8kLn9A/QXtbUl0/rU=\", false, function () {\n  return [useNavigate];\n});\n_c = RoomSearch;\nexport default RoomSearch;\nvar _c;\n$RefreshReg$(_c, \"RoomSearch\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","useNavigate","ApiService","jsxDEV","_jsxDEV","RoomSearch","_s","startDate","setStartDate","endDate","setEndDate","roomType","setRoomType","roomTypes","setRoomTypes","error","setError","navigate","fetchRoomTypes","types","getRoomTypes","console","message","showError","timeout","setTimeout","handleSearch","formattedStart","toISOString","split","formattedEnd","response","getAvailableRoomsByDateAndType","statusCode","roomList","length","state","rooms","filters","_error$response","_error$response$data","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","date","dateFormat","placeholderText","value","e","target","disabled","map","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/s/Hotel Booking Project/frontend/src/component/common/RoomSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport ApiService from '../../service/ApiService';\n\nconst RoomSearch = () => {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [roomType, setRoomType] = useState('');\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchRoomTypes = async () => {\n      try {\n        const types = await ApiService.getRoomTypes();\n        setRoomTypes(types);\n      } catch (error) {\n        console.error('Error fetching room types:', error.message);\n      }\n    };\n    fetchRoomTypes();\n  }, []);\n\n  const showError = (message, timeout = 5000) => {\n    setError(message);\n    setTimeout(() => setError(''), timeout);\n  };\n\n  const handleSearch = async () => {\n    if (!startDate || !endDate || !roomType) {\n      showError('Please select all fields');\n      return;\n    }\n\n    try {\n      const formattedStart = startDate.toISOString().split('T')[0];\n      const formattedEnd = endDate.toISOString().split('T')[0];\n\n      const response = await ApiService.getAvailableRoomsByDateAndType(\n        formattedStart, formattedEnd, roomType\n      );\n\n      if (response.statusCode === 200) {\n        if (response.roomList.length === 0) {\n          showError('No rooms available for selected dates and type.');\n          return;\n        }\n        navigate('/search-results', {\n          state: {\n            rooms: response.roomList,\n            filters: {\n              startDate: formattedStart,\n              endDate: formattedEnd,\n              roomType\n            }\n          }\n        });\n      }\n    } catch (error) {\n      showError(\"Unknown error occurred: \" + error?.response?.data?.message || error.message);\n    }\n  };\n\n  return (\n    <section className=\"search-container\">\n      <div className=\"search-field\">\n        <label>Check-in Date</label>\n        <DatePicker\n          selected={startDate}\n          onChange={date => setStartDate(date)}\n          dateFormat=\"dd/MM/yyyy\"\n          placeholderText=\"Select Check-in Date\"\n        />\n      </div>\n\n      <div className=\"search-field\">\n        <label>Check-out Date</label>\n        <DatePicker\n          selected={endDate}\n          onChange={date => setEndDate(date)}\n          dateFormat=\"dd/MM/yyyy\"\n          placeholderText=\"Select Check-out Date\"\n        />\n      </div>\n\n      <div className=\"search-field\">\n        <label>Room Type</label>\n        <select value={roomType} onChange={(e) => setRoomType(e.target.value)}>\n          <option disabled value=\"\">Select Room Type</option>\n          {roomTypes.map((type) => (\n            <option key={type} value={type}>{type}</option>\n          ))}\n        </select>\n      </div>\n\n      <button className=\"home-search-button\" onClick={handleSearch}>\n        Search Rooms\n      </button>\n\n      {error && <p className=\"error-message\">{error}</p>}\n    </section>\n  );\n};\n\nexport default RoomSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}